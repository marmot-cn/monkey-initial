#!/bin/bash

function initial {
	# 读取变量名称
	name=$1
	dst="$srcDir/${namespace}/Model"
	utDst="$utDir/${namespace}/Model"
	mockDst="$mockDir/${namespace}/Model"

	# 创建模型路径
	mkdir -p $dst
	mkdir -p $utDst	
	mkdir -p $mockDst
}

function createModelFile {
	local dst="$dst/${name}.php"
	if [ -f $dst -a $overwrite = 0 ];then
		runFail "$dst"
	else
		# 创建模型文件
		cp $vendorDir/template/src/Model/Model.php $dst
		sed -i -e "s/{@nameCaps}/${name}/g" -e "s/{@name}/${name,}/g" -e "s/{@namespaceCaps}/${namespace}/g" $dst
		runSuccess "$dst"
	fi
}

function createUtModelFile {
	local dst="$utDst/${name}Test.php"
	if [ -f $dst -a $overwrite = 0 ];then
		runFail "$dst"
	else
		cp $vendorDir/template/tests/ut/Model/Model.php $dst
		sed -i -e "s/{@nameCaps}/${name}/g" -e "s/{@name}/${name,}/g" -e "s/{@namespaceCaps}/${namespace}/g" $dst
		runSuccess "$dst"
	fi
}

function createMockModelFile {
	local dst="$mockDst/Mock${name}.php"
	if [ -f $dst -a $overwrite = 0 ];then
		runFail "$dst"
	else
		cp $vendorDir/template/tests/mock/Model/Model.php $dst
		sed -i -e "s/{@nameCaps}/${name}/g" -e "s/{@name}/${name,}/g" -e "s/{@namespaceCaps}/${namespace}/g" $dst
		runSuccess "$dst"
	fi
}

function createNullModelFile {
	local dst="$dst/Null${name}.php"
	if [ -f $dst -a $overwrite = 0 ];then
		runFail "$dst"
	else
		# 创建模型文件
		cp $vendorDir/template/src/Model/NullModel.php $dst
		sed -i -e "s/{@nameCaps}/${name}/g" -e "s/{@name}/${name,}/g" -e "s/{@namespaceCaps}/${namespace}/g" $dst
		runSuccess "$dst"
	fi
}

function createUtNullModelFile {
	local dst="$utDst/Null${name}Test.php"
	if [ -f $dst -a $overwrite = 0 ];then
		runFail "$dst"
	else
		# 创建模型文件
		cp $vendorDir/template/tests/ut/Model/NullModel.php $dst
		sed -i -e "s/{@nameCaps}/${name}/g" -e "s/{@name}/${name,}/g" -e "s/{@namespaceCaps}/${namespace}/g" $dst
		runSuccess "$dst"
	fi
}

function generate {
	createModelFile
	createUtModelFile
	createMockModelFile
	
	createNullModelFile
	createUtNullModelFile
}

initial $1
generate
